@page "/codeChallengeHome"

@if (takeChallenge)
{
    <MatButton OnClick="NewChallenge" Label="New Puzzle"></MatButton>
}
@if (isChallengeSucceed)
{
    <Animation Effect="@Effect.Flash" Speed="@Speed.Slow" IterationCount="500">
        <MatH3 Style="color:blue">Success!</MatH3>
    </Animation>
}
@if (isChallengeFail)
{
    <MatH3 Style="color:red">Fail!</MatH3>
}
@if (!isChallengeReady)
{
    <SpinKitRotatingPlane />

}
@if (isChallengeReady)
{
    <div class="mat-layout-grid">
        <div class="mat-layout-grid-inner">
            <div class="mat-layout-grid-cell mat-layout-grid-cell-span-4">
                <ChallengeSelect CodeChallenges="CodeChallenges" OnChallengeChanged="HandleChallengeChanged" />
            </div>

            <div class="mat-layout-grid-cell mat-layout-grid-cell-span-8">

                @if (!takeChallenge && selectedChallenge != null)
                {
                    <div class="text-center">
                        <MatH5>@selectedChallenge.Name</MatH5>
                    </div>
                    <ChallengeInfo description="@selectedChallenge.Description" examples="@selectedChallenge.Examples" /><br />
                    <MatButton Raised="true" Label="Solve" OnClick="SolveChallenge"></MatButton>
                }
                @if (isCodeCompiling)
                {
                    <hr />
                    <MatH4 Class="text-center" Style="color:blue">Executing...</MatH4>
                    <SpinKitFadingCircle/>
                }
                @if (takeChallenge)
                {

                    <MatButton Icon="input" OnClick="SubmitCode" Raised="true">Submit Solution</MatButton>
                    <MatButton Style="font-size:.7em" @onclick="ShowAnswer">Give Up? Get a solution</MatButton>
                    <MatButton Style="margin-left:30%" Icon="file_copy" OnClick="CopyCodeToClipboard">Copy to clipboard</MatButton>
                    <hr />
                    <BlazorMonaco.MonacoEditor CssClass="editor" @ref="Editor" Id="puzzleCsharp"
                                               ConstructionOptions="EditorOptionsPuzzle"
                                               OnDidInit="EditorOnDidInit" OnContextMenu="OnContextMenu" />

                }
            </div>
        </div>
    </div>

}


